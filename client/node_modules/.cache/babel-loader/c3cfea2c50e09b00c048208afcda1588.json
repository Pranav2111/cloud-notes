{"ast":null,"code":"var _jsxFileName = \"/Users/pranavpatil/Cloud Notes/cloudnotes/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notestInitial = [];\n  const [notes, setNotes] = useState(notestInitial); // Get all notes\n\n  const getnotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n  }; //Add note\n\n\n  const addnote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(\"adding a new note\");\n    const note = {\n      \"_id\": \"624614c821ecaad0a4f1c733\",\n      \"user\": \"6245c769e302532a5de8c32a\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-03-31T20:53:28.105Z\",\n      \"__v\": 1\n    };\n    setNotes(notes.concat(note));\n  }; // Edit note\n\n\n  const editnote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n\n      if (element._id == id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  }; // deleting note\n\n\n  const deletenote = id => {\n    const newnotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    console.log(`\"deleting ${id}\"`);\n    setNotes(newnotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      editnote,\n      deletenote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"gNF+wal72qBG3iqqiA49CuJe2Jc=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["/Users/pranavpatil/Cloud Notes/cloudnotes/src/context/notes/NoteState.js"],"names":["React","useState","NoteContext","NoteState","props","host","notestInitial","notes","setNotes","getnotes","response","fetch","method","headers","json","console","log","addnote","title","description","tag","body","JSON","stringify","note","concat","editnote","id","index","length","element","_id","deletenote","newnotes","filter","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\n\nconst NoteState = (props) => {\n\n  const host = \"http://localhost:5000\";\n\n  const notestInitial = []\n\n  const [notes, setNotes] = useState(notestInitial);\n\n  \n  // Get all notes\n  const getnotes = async () => {\n\n    const response = await fetch(`${host}/api/notes/fetchnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n\n      },\n      \n    });\n    const json = await response.json();\n    console.log(json);\n\n  }\n\n  //Add note\n\n  const addnote = async (title, description, tag) => {\n\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n\n      },\n      body: JSON.stringify({ title, description, tag })\n    });\n    const json = response.json();\n\n\n    console.log(\"adding a new note\");\n    const note = {\n      \"_id\": \"624614c821ecaad0a4f1c733\",\n      \"user\": \"6245c769e302532a5de8c32a\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-03-31T20:53:28.105Z\",\n      \"__v\": 1\n    };\n\n    setNotes(notes.concat(note));\n\n  }\n\n  // Edit note\n  const editnote = async (id, title, description, tag) => {\n\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-tocken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjI0NWM3NjllMzAyNTMyYTVkZThjMzJhIn0sImlhdCI6MTY0ODc0MzI3N30.lVWnYRRjlEnM4ZlK7bvjworXXKFr8lXbqWpCWp-bMX8'\n\n      },\n      body: JSON.stringify({ title, description, tag })\n    });\n    const json = response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id == id) {\n          element.title = title\n          element.description = description\n          element.tag = tag\n      }\n    }\n\n\n  }\n\n  // deleting note\n  const deletenote = (id) => {\n\n    const newnotes = notes.filter((note) => { return (note._id !== id) })\n    console.log(`\"deleting ${id}\"`);\n    setNotes(newnotes);\n  }\n\n\n  return (\n    <NoteContext.Provider value={{ notes, addnote, editnote, deletenote, getnotes }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\nexport default NoteState;"]},"metadata":{},"sourceType":"module"}